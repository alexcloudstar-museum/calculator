{"version":3,"sources":["GlobalStyles.ts","shared/components/Number/index.tsx","shared/components/Operations/index.tsx","shared/components/Result/style.ts","shared/components/Result/index.tsx","shared/components/Operations/style.ts","shared/containers/Calculator/index.tsx","shared/containers/Body/index.tsx","shared/containers/LeftSide/index.tsx","utils/operations/index.ts","shared/containers/RightSide/index.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","Number","onClick","number","className","Operations","sign","children","ResultWrapper","styled","div","Result","result","ClearWrapper","CalculatorContainer","useState","setResult","numbers","num0","setNum0","num1","setNum1","method","setMethod","setNumbersMethod","clear","resultsRender","i","length","push","slice","map","renderNumbers","Body","LeftSide","divide","add","subtract","multiply","RightSide","localResult","showResult","App","Calculator","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d6f226c8.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\nbody {\n  background-image: linear-gradient(\n    to left top,\n    #8c0dde,\n    #ec009f,\n    #ff0061,\n    #ff662f,\n    #eba012\n  );\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n}\n\n.App {\n  top: 50%;\n  left: 50%;\n  width: 300px;\n  height: auto;\n  font-size: 45px;\n  position: absolute;\n  border: 1px solid #f2274f;\n  transform: translate(-50%, -50%);\n  background: #fff;\n  -webkit-box-shadow: 13px 13px 6px 0px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 13px 13px 6px 0px rgba(0, 0, 0, 0.75);\n  box-shadow: 13px 13px 6px 0px rgba(0, 0, 0, 0.75);\n}\n\n.btn:hover {\n  cursor: pointer;\n}\n\n.text-right {\n  text-align: right !important;\n}\n\n.text-center {\n  text-align: center !important;\n}\n\n.Body {\n  display: flex;\n}\n\n.left-side {\n  width: 65%;\n}\n\n.left-side .row:nth-child(3) .btn {\n  border-top: 0;\n  border-bottom: 0;\n}\n\n.right-side {\n  width: 35.5%;\n}\n\n.btn {\n  padding: 0 20px;\n  border: 1px solid #921029;\n}\n\n.right-side .btn {\n  border-left: 0;\n  border-right: 0;\n  padding-top: 5px;\n  color: #fff;\n  background-color: #f2274f;\n}\n\n.right-side .btn:nth-child(even) {\n  border-top: 0;\n  border-bottom: 0;\n}\n.last-num .btn {\n    width: 100%;\n    padding: 0;\n    display: inline-block;\n    text-align: center;\n    border-bottom: 0;\n}\n`;\n\nexport default GlobalStyles;\n","import { FC } from 'react';\nimport NumberPropTypes from './NumberPropTypes';\n\nconst Number: FC<NumberPropTypes> = ({ onClick, number }) => (\n  <span className='btn' onClick={onClick}>\n    {number}\n  </span>\n);\n\nexport default Number;\n","import { FC } from 'react';\nimport OperationPropType from './OperationPropType';\n\nconst Operations: FC<OperationPropType> = ({ sign, onClick, children }) => (\n  <div className='btn' onClick={onClick}>\n    {sign && sign}\n  </div>\n);\n\nexport default Operations;\n","import styled from 'styled-components';\n\nexport const ResultWrapper = styled.div`\n  color: #fff;\n  padding-top: 15px;\n  text-align: right;\n  padding-right: 15px;\n  padding-bottom: 15px;\n  background-color: #433437;\n`;\n","import { FC } from 'react';\nimport ResultPropType from './ResultPropType';\n\nimport { ResultWrapper } from './style';\n\nconst Result: FC<ResultPropType> = ({ result }) => (\n  <ResultWrapper>{result}</ResultWrapper>\n);\n\nexport default Result;\n","import styled from 'styled-components';\n\nexport const ClearWrapper = styled.div`\n  font-size: 30px;\n  color: #525252;\n  text-align: center;\n  border-bottom: 0;\n\n  .btn {\n    padding: 20px 0;\n  }\n`;\n","import { FC, useState } from 'react';\nimport { Body } from 'shared/containers';\nimport { Result, Number } from 'shared/components';\n\nconst CalculatorContainer: FC = () => {\n  const [result, setResult] = useState(0);\n  const [numbers, ,] = useState([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const [num0, setNum0] = useState(0);\n  const [num1, setNum1] = useState(0);\n  const [method, setMethod] = useState<string | null>(null);\n\n  const clear = () => {\n    setResult(0);\n    setNum0(0);\n    setNum1(0);\n    setMethod(null);\n  };\n\n  const setNumbersMethod = (number: number) => {\n    num0 === 0 ? setNum0(number) : setNum1(number);\n\n    setResult(number);\n  };\n\n  const renderNumbers = () => {\n    const resultsRender: any[] = [];\n    for (let i = 0; i < numbers.length; i += 3) {\n      resultsRender.push(\n        <div key={i} className={`row ${i === 9 && 'last-num'}`}>\n          {numbers.slice(i, i + 3).map(number => (\n            <Number\n              key={number}\n              number={number}\n              onClick={() => setNumbersMethod(number)}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return <>{resultsRender}</>;\n  };\n\n  return (\n    <>\n      <Result result={result} />\n      <Body\n        result={result}\n        num0={num0}\n        num1={num1}\n        setMethod={setMethod}\n        setResult={setResult}\n        method={method}\n        clear={clear}\n        children={renderNumbers()}\n      />\n    </>\n  );\n};\n\nexport default CalculatorContainer;\n","import { FC } from 'react';\nimport { operationPropType } from 'utils/operations/operationPropType';\n\nimport { LeftSide, RightSide, LeftSideProps } from 'shared/containers';\n\ninterface BodyProps extends operationPropType, LeftSideProps {}\n\nconst Body: FC<BodyProps> = ({\n  num0,\n  num1,\n  setMethod,\n  setResult,\n  result,\n  method,\n  clear,\n  children,\n}) => (\n  <div className='Body'>\n    <LeftSide clear={clear}>{children}</LeftSide>\n    <RightSide\n      result={result}\n      num0={num0}\n      num1={num1}\n      setMethod={setMethod}\n      setResult={setResult}\n      method={method}\n    />\n  </div>\n);\n\nexport default Body;\n","import { FC } from 'react';\n\nimport { ClearWrapper, Operations } from 'shared/components';\n\nexport interface LeftSideProps {\n  clear: () => void;\n}\n\nconst LeftSide: FC<LeftSideProps> = ({ children, clear }) => (\n  <div className='left-side'>\n    <ClearWrapper>\n      <Operations sign={'clear'} onClick={clear} />\n    </ClearWrapper>\n    {children}\n  </div>\n);\n\nexport default LeftSide;\n","import { operationPropType, calculationPropType } from './operationPropType';\n\nexport const divide: calculationPropType = (num0, num1, setMethod) => {\n  setMethod && setMethod('divide');\n  return num0 / num1;\n};\n\nexport const add: calculationPropType = (num0, num1, setMethod) => {\n  setMethod && setMethod('add');\n  return num0 + num1;\n};\n\nexport const subtract: calculationPropType = (num0, num1, setMethod) => {\n  setMethod && setMethod('add');\n  return num0 - num1;\n};\n\nexport const multiply: calculationPropType = (num0, num1, setMethod) => {\n  setMethod && setMethod('multiply');\n  return num0 * num1;\n};\n\nexport const showResult = ({\n  result,\n  method,\n  num0,\n  num1,\n  setResult,\n}: operationPropType) => {\n  let localResult = result;\n\n  switch (method) {\n    case 'add':\n      localResult = add(num0, num1);\n      return setResult && setResult(localResult);\n    case 'subtract':\n      localResult = subtract(num0, num1);\n      return setResult(localResult);\n    case 'divide':\n      localResult = divide(num0, num1);\n      return setResult(localResult);\n    case 'multiply':\n      localResult = multiply(num0, num1);\n      return setResult(localResult);\n    default:\n      return localResult;\n  }\n};\n","import { FC } from 'react';\n\nimport { divide, subtract, multiply, add, showResult } from '../../../utils';\nimport { operationPropType } from '../../../utils/operations/operationPropType';\nimport { Operations } from '../../components';\n\nconst RightSide: FC<operationPropType> = ({\n  num0,\n  num1,\n  setMethod,\n  setResult,\n  result,\n  method,\n}) => (\n  <div className='right-side text-center'>\n    <Operations sign='/' onClick={() => divide(num0, num1, setMethod)} />\n    <Operations sign='-' onClick={() => subtract(num0, num1, setMethod)} />\n    <Operations sign='*' onClick={() => multiply(num0, num1, setMethod)} />\n    <Operations sign='+' onClick={() => add(num0, num1, setMethod)} />\n    <Operations\n      sign='='\n      onClick={() =>\n        showResult({ result, num0, num1, setMethod, setResult, method })\n      }\n    />\n  </div>\n);\n\nexport default RightSide;\n","import { FC } from 'react';\nimport GlobalStyles from './GlobalStyles';\nimport { CalculatorContainer } from './shared/containers';\n\nconst App: FC = () => (\n  <div className='App'>\n    <GlobalStyles />\n    <CalculatorContainer />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}